<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>两情若是久长时</title>
    <link href="/2024/01/18/%E4%B8%A4%E6%83%85%E8%8B%A5%E6%98%AF%E4%B9%85%E9%95%BF%E6%97%B6/"/>
    <url>/2024/01/18/%E4%B8%A4%E6%83%85%E8%8B%A5%E6%98%AF%E4%B9%85%E9%95%BF%E6%97%B6/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="95961cecb2a3c2f30d390b1ca1d1933d58adf85b72904f6bae5d710fb037d22d">341b0e48e14eadea5f3153fc247ed2c878b8f07408f2a0dbc6575a9862d5afb6c81de155142368a8aac26b10d87708443c1a3750e8e3934ff05501f9be82fcd88736b4a04a792e48a9e4910bd083a41ee7e502465b67df0be2254d333353591ab9cb39a4fc5100cca6155e5ca56787556b6b4b4377168e642e3b5efb629022ce58970c330fc5e432486d52b883cf84e16ebd4d9fbaa1c44b62d16b6a724d1cade0f975c7cf2c19cf65fff0f0f270e9d20f2285c5ad9b70c78f5cb64b2e03e428e59ad4fd630e4f9ee801067d84175ee14747f1f8d3028bccc00d53b9e9f807aa2f17a2d732772d6c6d74923baafc27b2e0352e3ff44da8b79ef02367f8655b1ef43709f9cce468cb07bf4d365b6544f9efed921dee42bd6488e2fde25644e11061b4f1900f69f34287d88a806c2837570f08866d7f764a898a801ce2f5095e6763bd6bdef0a19f759eee86672589faf9e008e7a01480ec54205de2292336f09bbcc3f5095ff5c765c90491c0563e84f68db7b5e6a045ebb2dbe01092d41093be4c4970b0af03cba88f431d3e3452c1b937eb605c3a4523521151eddc389fb0ec9bb2d1a82fd0eb17e0733d4a04c820acd51e58031f47a61a8611a78a4ee7bf56838279d8ba77265da7a6da1e4e9173be4029553f049c4e618d0482be5a949bf35db0c76e74aec371d71f923eb78e696c611e34069eb35825cca228ffd88ce013f03e7086332c48a26070e18ebdd2631470dd87dd95939062ad893ea74e78777d23741e571721024a63550c38cd728976ca84020db9546658b40710eecece942941a9e2b8950605626b0e6774b89128e2c34ed65e0e5a98acf4f07978d38e9af65795266d51596fb15c56cc30424f2b5cfc5055d2f7d980130cf9a9733f67b5795ae0bb88e85ab1bf96fb43a6f7d72dc4533b34926ed6604c1bae5a5fec3e96f92c4593c655a3fe322c522d1b6db95b942a35d2f4abfaac194a6673ac633ff8763bca71b7f54e6c92942f1a78e300ee1edd793dea655e9933b5155a1da2d98ae6053894acb7b01909a3bd09fe821db6445ce3e7950a5ea59da80c12f186f82ad1826bf7d2bc8359e5acc7018b8c95c52461ee791754c32172f713d61b364d98f582b73ca78ef669f150046df9f19e0794b63d6d4ed717f4cd76e63b91523a2f98664c60a3c8b6705c9952b022ebce8f145a6b3272a39d25984a3bad9bc066cf64a1adeb26f7901adf0b193dfd1c5d2324866ff56d86bf48d0b8971a7e98910e6199338fc0a1ade0ee75e2cf9e0dc367042c9c1914620ef986c566a4896362225fd1c549da6385ff31d9e216a5c7c28f776117af446359da197ccacf493efc9d710c48059528ca5abfb5ce9948869bfd37edc84fdb2489ccb2f9e3e47be06729273dc0aa86aaad481f856e39652fa066e7a991b53cf5cbb1577692da11f2d64b885ac104e6582eb8e1f047fe10ad7f091d510236c115932d57830cc145dfb22e6db0fa82f309b2f2e68df788c61266aaa0c4bb811c811135fb68317d393eab6cdf898df2926c787fc8a5cd06df106c244ed88421b9b619b01a3a6db41655acc385029929a1cc8f093a82692267a5532fb001ebb1b5cff90fd122944110133a0074ef3fed2a713eac45a8a243cf2a207f9b68ce5482e89c3a389bbed8e725b7056d3f494f7e3f1cfbbb2de211a241540808b862cd78e10f6d95fe1b63e875bd3542ecc3d5d223c4c5039bbfec4c6b9ac0d2597fef002cf53f7c012b5101776fd7cf1d2bad2e79ce717e9657927fe664a82be1d182f256eb7c9397c048296c8344976eb1a9b9d6b1ccac0d3921e3df8409fef84e4d9c1241c6411477d116f3691f72efcbccab859a519fbfd19649bc08a9d5fff4b1d03f426c3ec096877982a3cdb7a75872d49518cf2a1f55bc1a65da911ddfbc53f63435733d924c0dca4328aa1c22bc19b566fc9d8b8c10269d99eeef26f7421427ec135ce3ea023f6edc9ceababfdef8eebb335f3715eff4587ed4ff7e</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>此情可待成追忆</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>情圣是如何养成的1.0</title>
    <link href="/2023/12/09/%E6%83%85%E5%9C%A3%E6%98%AF%E5%A6%82%E4%BD%95%E5%85%BB%E6%88%90%E7%9A%841-0/"/>
    <url>/2023/12/09/%E6%83%85%E5%9C%A3%E6%98%AF%E5%A6%82%E4%BD%95%E5%85%BB%E6%88%90%E7%9A%841-0/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="d1e201ee7bde0c11fab8120cb8fc0ea0f4e1b7c2ffaaff9ab4d9820abceb6f9e"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>情圣是如何养成的</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>莫道世间真意少</title>
    <link href="/2023/12/09/%E8%8E%AB%E9%81%93%E4%B8%96%E9%97%B4%E7%9C%9F%E6%84%8F%E5%B0%91/"/>
    <url>/2023/12/09/%E8%8E%AB%E9%81%93%E4%B8%96%E9%97%B4%E7%9C%9F%E6%84%8F%E5%B0%91/</url>
    
    <content type="html"><![CDATA[<h1 id="莫道世间真意少"><a href="#莫道世间真意少" class="headerlink" title="莫道世间真意少"></a>莫道世间真意少</h1><p>提笔忘字，提笔忘字！言不由衷，词不达意啊。曾经高中时老师给一个感兴趣的命题，就能文思泉涌埋头苦干两节晚自习的时代过去了。回想那时，当真是山中不知日月，抬头已是万年，先甭管写出来的是什么三流货色。至少一气呵成，写完浑身通透好不快活。时间仿佛在笔下停滞，所有的压力现实明天昨日的都滚一边去，此时此刻脑海里这个伟大的有趣的根本讨论不出结果的作文（或是感想）题目就是一切！</p><p>当然，现在也有这样的快乐时光。多存在于费劲心思解出一道算法题，亲手完成一个业务功能。但是这种理科的成就感和满足感，代替不了昔日文学思辨的激烈与痛快。对未来的功利的思考，对人情世故的学习和应用，原来这就是成人吗。原来自己不知不觉间，已经慢慢变成当时唾弃的“无聊的大人”了。有多久没有完整的看过一本文学了（连网文都开始跳着寻找情绪爽点），虽然没有专业的培养和天生的灵性读文学也是一知半解，但既然它能传承和流行，想必是能触动普通读者的能力的，再不过，也能让我静下心来好好思考。以前最为鄙夷的短视频，居然有事没事也开始刷一下了，浮躁 啊 。</p><p>写了这么多居然还没写到“真意”。罢了，不如现在回答一下“少年不识愁滋味”里的几个问题。</p><ul><li>什么是喜欢呢？<ul><li>初中呢，我以为的喜欢是看其他女性时色如魔，看她时独独提不起一丝亵渎的欲望，少女身着白裙长发如瀑，仿佛身上有圣光在流动。此后念念不往，记忆里的白月光终于在无数次的美化中变成了执念。我想一开始的少年懵懂的爱慕，算是喜欢吧</li></ul></li><li>怎么判断你喜欢的是现实的人还是你眼中的那个人呢？<ul><li>判断不了，不重要，别判断，喜欢就上。反正怎么说你都想试一试的对不对，不试一试怎么甘心呢。</li></ul></li><li>有些人，有些事还是尘封在记忆里吧。毕竟物是人非事事休，人都是会变的嘛。真的是变成熟了吗，还是功利了，无趣了，亦或是这两者本就等价？<ul><li>说起来那时候的你可能不信，你打算尘封在记忆里的两个人，一个呢，你和她做了一个月的情侣（正式的哦），最后还是你选择结束的你敢信；还有一个呢，上周你去参加了她的生日会，本来以为再也见不到的那个人，你还是再次亲吻了她的嘴唇，当然故事还在继续。人都是会变的没错，但是你不是老天，你不知道他们会怎么变，是变好了还是变坏了，是对你不屑一顾了还是旧情难忘一点就燃，所以啊，别想那么多，乐观点，还是那句话，“没死就有机会”当时随口一嘴自己都不抱希望，没想到还成了真。后面这个问题好像现在看来没什么意思了，我大致是走在我少时想要的路上吧，目前先独立再论梦想。</li></ul></li><li>如果喜欢和激情随着时间慢慢磨灭了，那便要怪时间无情吗？如果只是荷尔蒙上了头，那哪怕在一起之后也不会长久的吧<ul><li>是因为她吗。多少遗憾多少不甘啊当时。我还没真正的认清自己，也许下一次，该尝试一下更久的恋爱？</li></ul></li><li>我想做什么样的人呢？<ul><li>首先，一定要做一个有趣的人，永远敢于接受新事物，新思想。多尝试一些文学和艺术相关的东西，多去认识不同的人，从他们身上学到为人处世的知识，大师永远保持一颗学徒的心。然后啊，一技之长不可荒废，业精于勤荒于嬉，没有独立的能力，何谈拯救他人？没有能力的喜欢不值一提啊。很重要的，要更自信，练习在不熟悉的场合从容不迫的能力，具体呢，就是从和他人说话先抬头看着别人的眼睛开始。</li></ul></li></ul><p>接下来，就再问问下次写东西的我几个问题吧</p><ul><li>你真的喜欢她吗，是一时上头的喜欢还是能长久的喜欢呢，或者说，你其实就是那个小时候对什么玩具都三分中热度的小屁孩？</li><li>该怎么对待她呢，该怎么对待曾经许下的山盟海誓，你曾经那么厌恶失信的人，如今你也要成为这样的人了吗，好像说好永远是心中重要的人的吧</li><li>你向往的究竟是什么呢，是巴尼式的感情生活，还是找到真爱就此罢手呢</li><li>总是在深夜里感到空虚，总是让不理智的感情占据自己的大脑，是病吗？解药真的是爱情吗</li></ul><p>嗯。时间还早，总结一下最近的心得吧</p><ul><li><p>坚持，提升自己，记住永远是自己有魅力女生才喜欢你而不是反过来</p></li><li><p>微信里说的话都是大部分都是说说而已，可信的永远是行动，上头可以，但是不要失去对形势的判断</p></li><li><p>你自己的真情流露啊还是故作深情什么的，哪怕要演也是要当场演才有效果的，不然你在wx这头哭的死去活来，别人眼里你只是奇奇怪怪的小丑罢了，人与人之间感情并不相通，更别说还只是单薄的文字交流了</p></li><li><p>反正呢，别吧wx上的话看那么重，别再反复揣摩别人字里行间的意思，也许别人只是随口一说？</p></li><li><p>同样的，追女生的话，别把自己在微信里说的话看的那么重，不要在反复纠结这一句话该不该发，删了又改改了又删，你精心准备的话语她也许只是随便看一眼回一下罢了，跟路边的狗叫了你给他一根骨头一个道理，你真正应该揣摩的，是tm你的未来，是tm下次去健身房该练哪里了，是tm这道算法题该怎么解这个理论该怎么理解，把精力放到有意义的地方（有天赋不讨厌有价值算有意义，你想想做她舔狗精神内耗符合哪条了？）</p><p>当然啊，也不是说不发，反而要多发。发那种不沉重的（大部分女生对深度的分享不感兴趣的），分享日常的有趣的话题，多发陈述句少发问句（比如我今天吃了这个感觉好好吃啊再配张照片）关键在于分享一件事并且带上自己的情绪，话题最好是共同回忆其次是共同生活（比如一起上了同一门课老师咋样啦考试难不难什么的）再其次也要是别人女生能接下去聊的话题（吃喝玩乐，分享你对常见事物的各种看法，就平时和朋友怎么聊就怎么聊）对女生的了解是要在这有的没得的废话中一步步加深的，别一上来就跟个dinner一样查户口（你中午吃了吗），很快你就发现一问一答很冒犯（不符合目前关系）而且没什么好问的了</p></li><li><p>忘记说了，第一印象很重要。题外话，要是女生很会并且对你第一印象很好的话，恭喜你，只要别太下头，随便聊聊就进入暧昧期了。所以在准备追之前，一定要先见面，你想想你是女生愿不愿意和一个不知道长什么样的男的在网上天天聊天还成为情侣啊，万一对面是个下头猥琐大菲柱呢。所以，哪怕是搭讪加wx，至少别人看到你长什么样了，聊天时就会代入你的脸，这样才会有好感。</p></li><li><p>等你做网络朋友做差不多了就要约线下了，我个人是比较倾向聊的暧昧了再约线下，你要是觉得你线下能拿捏也能直接约出来暧昧。什么是暧昧期呢？<strong>她会主动给你发微信，对你发的话呢也会认真回答并开启下一个话题</strong>，如果她每次都是你发一串她隔很久会一句（嗯 好），别觉得她是有事没回复你，现代人tm蹲个坑都打开手机刷视频，你说她会没看到你发的？再加上她是见过你的，那结论就是第一印象不行兄弟你没戏了，下一个吧，天涯何处无芳草呢不是。对于那些没那么主动但是认真回复你的女生（可能只是家教有礼貌），聊的差不多了可以开始试探了，“这家店好好吃啊。对啊。要不要下次一起去我请你吃哈哈哈哈哈”（加几个哈哈哈哈可以缓和气氛显得你没那么严肃女生也会比较好回答，当然要是一直哈哈哈哈的多半是脑子沾点东西），“我要睡啦，那，晚安！”诸如此类，如果女生有暧昧的回应的话那就是进入暧昧期了</p></li><li><p>这时候你们的关系更进一步，可以发之前发会冒犯的东西了。比如，“在干嘛呢”。这句话你刚认识发很dinner因为别人在干嘛关你鸟事，但是现在发潜台词就是“我想你了”。而且她回复的话就有现成话题不用想了。还有就是土味情话，以一种调侃的语气发还是很好玩的。这时候呢还可以说一些关于未来的想象的话，比如说要在哪里定居啊，想过什么样的生活啊，末了加一句“就是身边还缺一个人感觉有点孤单呢”，反正女生嘛，就喜欢畅想未来有的没的。</p></li><li><p>聊天注意适可而止，她发多少你就发差不多，注意是在交流而不是自己唱独角戏。同样的，线上差不多（断断续续一周？看你自己）就该约出来线下了。线下应该牢记三次机会，第一次，<strong>别表白</strong>别带礼物，还是以朋友相处，就吃吃饭散散步，不会说话就看个电影什么的；回去该聊照样聊，第二次的时候，女生要是还愿意跟你出来，那就是对你有意思了，可以约在暧昧一点的地方，吃完饭去清吧喝点小酒什么的，聊的暧昧一点就可以表白了（一定要有9成把握再表白，小丑很可怜的捏）；至于第三次是一个警戒线，再不搞搞暧昧你们估计就没什么戏了，女生还是没有任何表示的话估计是养🐟了及时止损吧。</p></li><li><p><strong>潘驴邓小闲</strong>是永不过时的，不符合就去提升自己</p></li><li><p>具体问题具体分析，有些女生没什么恋爱经历，那就多关心她嘘寒问暖；有些女生比较有经验对套路不感冒，那就少点话术多展示自己的个人魅力。</p></li><li><p>但是女生的一个共性就是喜欢别人对自己好。换做是你有个优秀的人对你好的话哪怕你不是那么喜欢她也会有一点点心动吧。所以平时内向的理工男，要稍稍放下自己内心的矜持，人不要脸就是无敌的，但是要注意别当舔狗。两者的界限就是少付出实质的感动自己的行动，兜兜里没几个米就少送礼物了。</p></li><li><p>有喜欢的就大胆追，最怕的就是你患得患失搞得自己内耗了，女生慕强喜欢的是自信强大的男人。你想啊，本来就是陌生人最不济就回到原来的状态呗，你本来就没拥有什么何谈失去呢？那些说做不成朋友的就更可笑了，你是孤儿没朋友？反正就是冲！不行下一个，时间很宝贵的应该拿来取悦自己提升自己，别放在八字没一撇的事上。</p></li><li><p>要自信啊少年！你他妈就是最牛逼的。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>此情可待成追忆</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>昨日之日不可留</title>
    <link href="/2023/06/07/%E6%98%A8%E6%97%A5%E4%B9%8B%E6%97%A5%E4%B8%8D%E5%8F%AF%E7%95%99/"/>
    <url>/2023/06/07/%E6%98%A8%E6%97%A5%E4%B9%8B%E6%97%A5%E4%B8%8D%E5%8F%AF%E7%95%99/</url>
    
    <content type="html"><![CDATA[<h1 id="昨日之日不可留"><a href="#昨日之日不可留" class="headerlink" title="昨日之日不可留"></a>昨日之日不可留</h1><ul><li>弃我去者，昨日之日不可留</li><li>天天脑子里就是些儿女情长，好没意思，大丈夫豪情万丈，建功立业，哪怕失败了再搞风花雪月也不差</li><li>自南京归，寻花问柳，游山玩水，美人美景不可多得，心中郁结一吐为快，坚定了体验派的道路</li><li>事不遂人意，回杭州后大病一场，酒店隔离3日。第二次一个人住酒店，却没了第一次时的落寞心境，以平常心而对孤独，才知道自己未曾与孤独为伴。也许是跳脱性子，也许是虚荣空虚。不过稍微与尘世分开，也算能停下来想想自己，想要什么，所谓我是谁，从何处来，到何处去，如今最在乎的倒是最后一个问题，到何处去呢</li><li>罢了罢了，想不明白便不想了，空虚了还是先提升专业技能为妙，衣食足才知荣辱。不过这也只是治标不治本，闲下来去看点好书吧，杨绛不是说过，都是书读太少了嘛。不过人世间何尝不是一本大书，只是东西太繁太杂，需要读书人有足够的提炼思考能力，否则只能越活越回去咯</li></ul>]]></content>
    
    
    <categories>
      
      <category>此情可待成追忆</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>少年不识愁滋味</title>
    <link href="/2023/05/20/%E5%B0%91%E5%B9%B4%E4%B8%8D%E8%AF%86%E6%84%81%E6%BB%8B%E5%91%B3/"/>
    <url>/2023/05/20/%E5%B0%91%E5%B9%B4%E4%B8%8D%E8%AF%86%E6%84%81%E6%BB%8B%E5%91%B3/</url>
    
    <content type="html"><![CDATA[<h1 id="少年不识愁滋味"><a href="#少年不识愁滋味" class="headerlink" title="少年不识愁滋味"></a>少年不识愁滋味</h1><ul><li>什么是喜欢呢</li><li>怎么判断你喜欢的是现实的人还是你眼中的那个人呢</li><li>有些人，有些事还是尘封在记忆里吧。毕竟物是人非事事休，人都是会变的嘛。真的是变成熟了吗，还是功利了，无趣了，亦或是这两者本就等价</li><li>如果喜欢和激情随着时间慢慢磨灭了，那便要怪时间无情吗？如果只是荷尔蒙上了头，那哪怕在一起之后也不会长久的吧</li><li>我想做什么样的人呢</li></ul>]]></content>
    
    
    <categories>
      
      <category>此情可待成追忆</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>多少恨</title>
    <link href="/2023/04/07/%E5%A4%9A%E5%B0%91%E6%81%A8/"/>
    <url>/2023/04/07/%E5%A4%9A%E5%B0%91%E6%81%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="多少恨"><a href="#多少恨" class="headerlink" title="多少恨"></a>多少恨</h1><ul><li><p>坏蛋，坏女人。嘴上说不喜欢渣男，自己却撩完就跑。哼。最讨厌你了。</p></li><li><p>明明只和你接触了不到一个月，怎么感觉生活处处都是你的印记呢。qq音乐时不时的给我推事后烟的歌，这个乐队的风格真的和他们的名字一模一样哎，做完爱后点一根烟出神，虚无而慵懒的声调，歌词中满溢情欲。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>此情可待成追忆</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>解决百度网盘限速</title>
    <link href="/2022/11/19/%E8%A7%A3%E5%86%B3%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E9%99%90%E9%80%9F/"/>
    <url>/2022/11/19/%E8%A7%A3%E5%86%B3%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E9%99%90%E9%80%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="解决百度网盘限速"><a href="#解决百度网盘限速" class="headerlink" title="解决百度网盘限速"></a>解决百度网盘限速</h1><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><ul><li>下载Motrix（官网下载<a href="https://motrix.app/">Motrix</a>或者找我要安装包）</li><li>找一个百度解析网站（网站可能会失效）<ul><li><a href="https://www.kelongwo.com/Resource_function/pan/baidu/">克隆窝 (kelongwo.com)</a></li><li>……</li></ul></li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><ul><li><p>解析网站里输入网盘地址（分享链接）和密码（提取码）</p><p><img src="/%5C%E8%A7%A3%E5%86%B3%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E9%99%90%E9%80%9F%5Cimage-20221119104633822.png"></p></li><li><p>点击解析</p><p><img src="/%5C%E8%A7%A3%E5%86%B3%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E9%99%90%E9%80%9F%5Cimage-20221119104838438.png" alt="image-20221119104838438"></p></li><li><p>全选后点击Motrix批量下载（这步需要先安装Motrix）</p></li><li><p>然后就可以全速下载啦</p><p><img src="/%5C%E8%A7%A3%E5%86%B3%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E9%99%90%E9%80%9F%5Cimage-20221119104928159.png" alt="image-20221119104928159"></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实用技巧</tag>
      
      <tag>破解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>lc34</title>
    <link href="/2022/09/30/lc34/"/>
    <url>/2022/09/30/lc34/</url>
    
    <content type="html"><![CDATA[<h1 id="lc34-在排序数组中查找元素的第一个和最后一个位置-中等"><a href="#lc34-在排序数组中查找元素的第一个和最后一个位置-中等" class="headerlink" title="lc34. 在排序数组中查找元素的第一个和最后一个位置(中等)"></a>lc34. 在排序数组中查找元素的第一个和最后一个位置(中等)</h1><p>​<br>给你一个按照非递减顺序排列的整数数组 nums，和一个目标值 target。请你找出给定目标值在数组中的开始位置和结束位置。</p><p>如果数组中不存在目标值 target，返回 [-1, -1]。</p><p>你必须设计并实现时间复杂度为 O(log n) 的算法解决此问题。</p><p>示例 1：</p><p>输入：nums &#x3D; [5,7,7,8,8,10], target &#x3D; 8<br>输出：[3,4]</p><p>示例 2：</p><p>输入：nums &#x3D; [5,7,7,8,8,10], target &#x3D; 6<br>输出：[-1,-1] </p><p>示例 3：</p><p>输入：nums &#x3D; [], target &#x3D; 0<br>输出：[-1,-1]</p><p>题解：由lc35. 搜索插入位置得到思路，既然修改二分查找模板  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">while</span>(l &lt;= r)&#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> l + (r - l)/<span class="hljs-number">2</span>;<br>            <span class="hljs-keyword">if</span>(nums[m] &gt; target)&#123;<br>                r = m - <span class="hljs-number">1</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nums[m] &lt; target)&#123;<br>                l = m + <span class="hljs-number">1</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">return</span> m;<br>            &#125;<br>        &#125;<br></code></pre></td></tr></table></figure><p>为  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">while</span>(l &lt;= r)&#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> l + (r - l)/<span class="hljs-number">2</span>;<br>            <span class="hljs-keyword">if</span>(nums[m] &gt;= target)&#123;<br>                r = m - <span class="hljs-number">1</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nums[m] &lt; target)&#123;<br>                l = m + <span class="hljs-number">1</span>;<br>            &#125;<br>            <br>        &#125;<br></code></pre></td></tr></table></figure><p>​<br>就能得到l为第一个大于等于target的值（原理在<a href="https://sanrenjianxin.github.io/2022/09/28/lc35/">lc35. 搜索插入位置（简单）</a>)</p><p>有解释。那同理修改  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">while</span>(l &lt;= r)&#123;<br>    <span class="hljs-keyword">if</span>(nums[m] &gt; target)&#123;<br>        r = m - <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nums[m] &lt;= target)&#123;<br>        l = m + <span class="hljs-number">1</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>获得的r就为最后一个小于等于target的值。</p><p>这样我们只需要二次查找数组，分别求出l，r。就可以得到题目要求的左右边界。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span>[] searchRange(<span class="hljs-type">int</span>[] nums, <span class="hljs-type">int</span> target) &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">l</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">r</span> <span class="hljs-operator">=</span> nums.length - <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">while</span>(l &lt;= r)&#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> l + (r - l)/<span class="hljs-number">2</span>;<br>            <span class="hljs-keyword">if</span>(nums[m] &lt; target)&#123;<br>                l = m + <span class="hljs-number">1</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                r = m - <span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-type">int</span>[] ans = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[<span class="hljs-number">2</span>];<br>        ans[<span class="hljs-number">0</span>] = l;<br>        l = <span class="hljs-number">0</span>;<br>        r = nums.length - <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">while</span>(l &lt;= r)&#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> l + (r - l)/<span class="hljs-number">2</span>;<br>            <span class="hljs-keyword">if</span>(nums[m] &lt;= target)&#123;<br>                l = m + <span class="hljs-number">1</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                r = m - <span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>        ans[<span class="hljs-number">1</span>] = r;<br><span class="hljs-comment">//若左边界大于右边界，说明不存在target</span><br>        <span class="hljs-keyword">if</span>(ans[<span class="hljs-number">0</span>] &gt; ans[<span class="hljs-number">1</span>])&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[]&#123;-<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>&#125;;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>​</p><p>​</p>]]></content>
    
    
    <categories>
      
      <category>题解</category>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>二分查找</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>lc35</title>
    <link href="/2022/09/28/lc35/"/>
    <url>/2022/09/28/lc35/</url>
    
    <content type="html"><![CDATA[<h1 id="lc35-搜索插入位置（简单）"><a href="#lc35-搜索插入位置（简单）" class="headerlink" title="lc35. 搜索插入位置（简单）"></a>lc35. 搜索插入位置（简单）</h1><p>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。</p><p>请必须使用时间复杂度为 O(log n) 的算法。</p><p>示例 1:</p><p>输入: nums &#x3D; [1,3,5,6], target &#x3D; 5<br>输出: 2  </p><p>示例 2:</p><p>输入: nums &#x3D; [1,3,5,6], target &#x3D; 2<br>输出: 1  </p><p>示例 3:</p><p>输入: nums &#x3D; [1,3,5,6], target &#x3D; 7<br>输出: 4</p><p>题解：第一眼想到c++lower_bound函数，返回数组第一个大于等于target的值。所以题目是二分查找模板题。二分查找中变量无非l,m,r。if语句限制l左边数一定小于target,right右边数一定大于target。而while语句结束后l &#x3D; r + 1。假如数组为…rl…，则…r小于target，l…大于target，此时l是第一个大于target的位置，即需要插入的位置。若数组中数都比target小,则r &#x3D; length-1，l&#x3D;length，算法成立。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">searchInsert</span><span class="hljs-params">(<span class="hljs-type">int</span>[] nums, <span class="hljs-type">int</span> target)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">l</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">r</span> <span class="hljs-operator">=</span> nums.length - <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">while</span>(l &lt;= r)&#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> l + (r - l)/<span class="hljs-number">2</span>;<br>            <span class="hljs-keyword">if</span>(nums[m] &gt; target)&#123;<br>                r = m - <span class="hljs-number">1</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nums[m] &lt; target)&#123;<br>                l = m + <span class="hljs-number">1</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">return</span> m;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> l;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>题解</category>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>二分查找</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>lc28</title>
    <link href="/2022/09/27/lc28/"/>
    <url>/2022/09/27/lc28/</url>
    
    <content type="html"><![CDATA[<h1 id="lc28-找出字符串中第一个匹配项的下标（中等）-kmp算法详解"><a href="#lc28-找出字符串中第一个匹配项的下标（中等）-kmp算法详解" class="headerlink" title="lc28. 找出字符串中第一个匹配项的下标（中等）-kmp算法详解"></a>lc28. 找出字符串中第一个匹配项的下标（中等）-kmp算法详解</h1><p>给你两个字符串 haystack 和 needle ，请你在 haystack 字符串中找出 needle 字符串的第一个匹配项的下标（下标从 0 开始）。如果 needle 不是 haystack 的一部分，则返回  -1 。</p><p>示例 1：</p><p>输入：haystack &#x3D; “sadbutsad”, needle &#x3D; “sad”<br>输出：0<br>解释：”sad” 在下标 0 和 6 处匹配。<br>第一个匹配项的下标是 0 ，所以返回 0 。<br>示例 2：  </p><p>输入：haystack &#x3D; “leetcode”, needle &#x3D; “leeto”<br>输出：-1<br>解释：”leeto” 没有在 “leetcode” 中出现，所以返回   -1 。</p><p>题解：暴力解法就不讲了。讲讲kmp算法。</p><p>先看kmp为什么能减小时间复杂度及其正确性证明，设文本串haystack为aabaaac，模块串needle为aac。n &#x3D; haystack.length，m &#x3D; needle.length</p><p>令指针i &#x3D; 0指向haystack，j &#x3D; 0 指向needle。假如是暴力解法，当i &#x3D; 2，j &#x3D; 2时字符不相等，指针i会回溯到1 的位置，j回溯到0重新开始。 </p><p>为了减少时间复杂度，我们就会想，假如j回溯至0而i不回溯呢。显然时间复杂度会从o(mn)减小到o(n)。但是这样会导致一个问题，当i &#x3D; 5,j &#x3D; 2时a!&#x3D;c，不匹配，此时若是回溯j &#x3D; 0而i不变，得到haystack子串ac不匹配needle，return -1。显然与答案不符。</p><p>这样做的根本问题是在回溯j的时候会错过已经匹配了的haystack字串(本例中是一个a)。</p><p>显然，我们如果将j不回溯到0，而是回溯到1，就会匹配成功了。</p><p>同理，在每一个不匹配的状态下，j都会回到一个特定的位置。而这位置与haystack和i无关，只与needle有关。</p><p>这种无后效性的递推方式，其实就是动态规划的思想。每一个不匹配时的j，都是一个状态。而kmp的next[i]其实就是dp[i]。</p><p>那么怎么得到next[i]呢？</p><p>这里要引入前后缀和最长相等前后缀的知识。对于字符串aac来说，不看最后一个字符，并且以第一个字符开始的子串及aac的前缀，即a，aa。同理后缀为c，ac。此时我们知道aac没有相等的前后缀，next[2]&#x3D;0。同理对于aa字串，其最长相等前后缀为a，所以next[1]&#x3D;1。而a字串没有前后缀，next[0]&#x3D;0。 <br><br></p><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center">j</td><td align="center">0</td><td align="center">2</td><td align="center">1</td></tr><tr><td align="center">子串</td><td align="center">a</td><td align="center">aa</td><td align="center">aac</td></tr><tr><td align="center">next</td><td align="center">0</td><td align="center">1</td><td align="center">0</td></tr><tr><td align="center"><br></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><p>为什么求最长相等前后缀就可以得到next数组呢？回到前面的例子。回溯j&#x3D;0不行的原因其实是由于aac串子串aa中存在相等的前后缀a，回溯j&#x3D;0会使我们漏掉文本串中已经匹配的a，此时我们将移动至1（即最长相等前后缀中前缀的下一个位置）就能使已经匹配的信息继续保持匹配。         </p><p>接下来就是怎么实现求next[i]的问题了。这里结合代码进行讲解。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">get_next</span><span class="hljs-params">(<span class="hljs-type">int</span>[] next, String needle)</span>&#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt; needle.length(); ++i)&#123;<br>        <span class="hljs-keyword">while</span>(j &gt; <span class="hljs-number">0</span> &amp;&amp; needle.charAt(i) != needle.charAt(j))&#123;<br>            j = next[j - <span class="hljs-number">1</span>];<span class="hljs-comment">//2.这里是最难理解的</span><br>        &#125;<br>        <span class="hljs-keyword">if</span>(needle.charAt(i) == needle.charAt(j))&#123;<br>            j++;<span class="hljs-comment">//1.</span><br>        &#125;<br>        next[i] = j;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这里的i相当于上方表格中的j，needle[0-i]也就代表了模块串的每一个子串。而这里的j代表当前字符串最长相等前后缀长度（也是其前缀下标+1）。</p><p>从i&#x3D;1开始，当needle[i]&#x3D;&#x3D;needle[j]时我们就让j++，并且i++。显然，若是一直相等下去，那么两个指针一直同时移动，随着i++，next也就++，j则一直标记着最长相等前后缀长度（也是其前缀下标+1）的位置。也就是1.处代码的含义。</p><p>那么当needle[i]&#x3D;&#x3D;needle[j]，显然我们要将j回退到一个地方，那么回退到哪里呢。这里有一点动态规划的思想，利用先前求好的状态来求当前状态。也是实现部分最难理解最抽象的地方。即j &#x3D; next[j-1]这行代码。</p><p>设模式串</p><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center"></td><td align="center">j1</td><td align="center"></td><td align="center"></td><td align="center">j0</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">i</td></tr><tr><td align="center">a</td><td align="center">c</td><td align="center">a</td><td align="center">a</td><td align="center">b</td><td align="center">…</td><td align="center">a</td><td align="center">c</td><td align="center">a</td><td align="center">a</td><td align="center">c</td></tr></tbody></table><p>当i，j处于此处时模式串失配。令j回溯至某个位置并且i不变。听起来是不是有点耳熟。是的，这其实就是之前文本串和模式串匹配时我们的思路。那时的文本串就是此时的模式串，而模式串就是字串abaab。按照之前的想法，我们应该让j&#x3D;next[j-1]来避免错过已匹配字符。不断执行这条语句直到needle[i]&#x3D;&#x3D;needle[j]，此时的j1就是相等前缀的位置了。</p><p>当我们得到了next[i]之后，接下来的事就简单了。在此不赘述。</p><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">strStr</span><span class="hljs-params">(String haystack, String needle)</span> &#123;<br>        <span class="hljs-type">int</span>[] next = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[needle.length()];<br>        get_next(next, needle);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, j = <span class="hljs-number">0</span>; i &lt; haystack.length(); ++i)&#123;<br>            <span class="hljs-keyword">while</span>(j &gt; <span class="hljs-number">0</span> &amp;&amp; haystack.charAt(i) != needle.charAt(j))&#123;<br>                j = next[j - <span class="hljs-number">1</span>];<br>            &#125;<br>            <span class="hljs-keyword">if</span>(haystack.charAt(i) == needle.charAt(j))&#123;<br>                j++;<br>            &#125;<br>            <span class="hljs-keyword">if</span>(j == needle.length())&#123;<br>                <span class="hljs-keyword">return</span> i - needle.length() + <span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>        <br>        <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">get_next</span><span class="hljs-params">(<span class="hljs-type">int</span>[] next, String needle)</span>&#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt; needle.length(); ++i)&#123;<br>            <span class="hljs-keyword">while</span>(j &gt; <span class="hljs-number">0</span> &amp;&amp; needle.charAt(i) != needle.charAt(j))&#123;<br>                j = next[j - <span class="hljs-number">1</span>];<br>            &#125;<br>            <span class="hljs-keyword">if</span>(needle.charAt(i) == needle.charAt(j))&#123;<br>                j++;<br>            &#125;<br>            next[i] = j;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>​  </p>]]></content>
    
    
    <categories>
      
      <category>题解</category>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kmp</tag>
      
      <tag>动态规划</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
